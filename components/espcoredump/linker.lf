[sections:rtc_fast_coredump]
entries:
    .rtc.fast.coredump+

[sections:rtc_coredump]
entries:
    .rtc.coredump+

[sections:dram_coredump]
entries:
    .dram1.coredump+

if IDF_TARGET_ESP32S2 = n:
    [sections:iram_coredump]
    entries:
        .iram.data.coredump+

[scheme:coredump_default]
entries:
    dram_coredump -> dram_coredump
    rtc_coredump -> rtc_coredump
    rtc_fast_coredump -> rtc_fast_coredump
    if IDF_TARGET_ESP32S2 = n:
        iram_coredump -> iram_coredump

[mapping:coredump_default]
archive: *
entries:
    * (coredump_default)

[mapping:espcoredump]
archive: libespcoredump.a
entries:
    if ESP_PANIC_HANDLER_IRAM = y:
        core_dump_uart (noflash_text)
        core_dump_flash (noflash_text)
        core_dump_common (noflash_text)
        core_dump_port (noflash_text)
        core_dump_elf (noflash_text)
    else:
        * (default)

[mapping:spi_flash_override]
archive: libspi_flash.a
entries:
    if ESP_PANIC_HANDLER_IRAM = y && ESP_COREDUMP_ENABLE_TO_FLASH = y:
        esp_flash_api (noflash_text)
        esp_flash_spi_init (noflash_text)
    else:
        * (default)

[mapping:sha256_coredump]
archive: libmbedcrypto.a
entries:
    if ESP_COREDUMP_CHECKSUM_SHA256 = y :
        if MBEDTLS_HARDWARE_SHA = n:
            sha256 (noflash_text)
        else:
            esp_sha256 (noflash_text)
